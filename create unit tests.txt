To create unit tests for the `StudentConverter` class, we will use JUnit 5's `@ParameterizedTest` alongside `@MethodSource` for parameterization. Below is the unit test that covers the `convertStudents` function:

```java
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;

import java.util.Collections;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class StudentConverterTest {

    static Stream<Arguments> positiveTestCasesProvider() {
        return Stream.of(
                Arguments.of(Collections.singletonList(new Student("Alice", 21, 91, false, false, false)), true, false, false, false),
                Arguments.of(Collections.singletonList(new Student("Bob", 20, 95, false, false, false)), false, true, false, false),
                Arguments.of(Collections.singletonList(new Student("Charlie", 19, 75, false, false, false)), false, false, true, false),
                Arguments.of(Collections.singletonList(new Student("David", 22, 65, false, false, false)), false, false, false, true)
        );
    }

    static Stream<Arguments> negativeTestCasesProvider() {
        return Stream.of(
                Arguments.of(Collections.emptyList(), Collections.emptyList()),
                Arguments.of(null, NullPointerException.class)
        );
    }

    @ParameterizedTest
    @MethodSource("positiveTestCasesProvider")
    public void testConvertStudentsPositive(List<Student> students, boolean honorRoll, boolean exceptional, boolean passed, boolean failed) {
        StudentConverter converter = new StudentConverter();
        List<Student> results = converter.convertStudents(students);
        Assertions.assertEquals(1, results.size());

        Student result = results.get(0);
        Assertions.assertEquals(honorRoll, result.isHonorRoll());
        Assertions.assertEquals(exceptional, result.isExceptional());
        Assertions.assertEquals(passed, result.isPassed());
        Assertions.assertEquals(failed, !result.isPassed());
    }

    @ParameterizedTest
    @MethodSource("negativeTestCasesProvider")
    public void testConvertStudentsNegative(List<Student> input, Object expected) {
        StudentConverter converter = new StudentConverter();

        if (expected instanceof Class && Exception.class.isAssignableFrom((Class<?>) expected)) {
            Assertions.assertThrows((Class<? extends Exception>) expected, () -> converter.convertStudents(input));
        } else {
            List<Student> results = converter.convertStudents(input);
            Assertions.assertTrue(results.isEmpty());
        }
    }
}
```

Make sure to include the required imports such as `org.junit.jupiter.api`, `org.junit.jupiter.params`, and others. If your IDE doesn't recognize some classes, it might be because the required dependencies are missing or not included.

Note: This solution assumes the existence of boolean getters like `isPassed()`, `isExceptional()`, etc., in the `Student` class. Adjust accordingly if your actual class has different method names.